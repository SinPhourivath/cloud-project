name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: MYSQL_HOST,MYSQL_USER,MYSQL_PASSWORD,MYSQL_DATABASE
          script: |
            # Navigate to home directory
            cd /home/ec2-user
            
            # Stop and remove existing containers
            sudo docker stop $(sudo docker ps -a -q) || true
            sudo docker rm $(sudo docker ps -a -q) || true
            
            # Remove old project directory
            sudo rm -rf cloud-computing-project
            
            # Clone the latest code
            git clone https://github.com/g3-cloud-computing-project/cloud-computing-project.git
            cd cloud-computing-project
            
            # Create .env file
            cat > .env << 'EOF'
            DB_HOST=${MYSQL_HOST}
            DB_USER=${MYSQL_USER}
            DB_PASSWORD=${MYSQL_PASSWORD}
            DB_NAME=${MYSQL_DATABASE}
            PORT=3000
            EOF
            
            # Remove old images
            sudo docker system prune -af
            
            # Build new image
            sudo docker build -t cloud-computing-project:latest .
            
            # Run new container with proper network configuration
            sudo docker run -d \
              --name brave_lumiere \
              --restart unless-stopped \
              -p 80:3000 \
              -p 3000:3000 \
              -e DB_HOST="${MYSQL_HOST}" \
              -e DB_USER="${MYSQL_USER}" \
              -e DB_PASSWORD="${MYSQL_PASSWORD}" \
              -e DB_NAME="${MYSQL_DATABASE}" \
              -e PORT=3000 \
              cloud-computing-project:latest
            
            # Display container logs
            echo "Container logs:"
            sudo docker logs brave_lumiere
            
            # Check if MySQL is accessible
            echo "Testing MySQL connection:"
            sudo docker exec brave_lumiere ping -c 1 ${MYSQL_HOST} || echo "MySQL host unreachable"